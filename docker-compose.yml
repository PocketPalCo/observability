services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3099:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
    networks:
      - observability

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=3d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - observability

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yml
      - loki_data:/tmp/loki
    command: -config.file=/etc/loki/local-config.yml
    networks:
      - observability


  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel/otel-collector-config.yaml"]
    volumes:
     - ./otel/otel-collector-config.yaml:/etc/otel/otel-collector-config.yaml
    ports:
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP Http
      - "8889:8889"    # Prometheus metrics endpoint
    depends_on:
      - loki
    networks:
      - observability
#  terraform:
#    image: hashicorp/terraform:latest
#    container_name: terraform
#    volumes:
#      - ./terraform:/terraform
#    working_dir: /terraform
#    entrypoint: [ "/bin/sh", "-c", "while true; do sleep 1000; done" ]
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    privileged: true
    ports:
      - "9101:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.cpu.info.flags-include=.*'
      - '--collector.ethtool.device-include=.*'
      - '--collector.ethtool.metrics-include=.*'
      - '--collector.hwmon.chip-include=.*'
      - '--collector.hwmon.sensor-include=.*'
      - '--collector.netdev'
    networks:
      - observability

  jaeger:
    image: jaegertracing/jaeger:latest
    container_name: jaeger
    command: [ "--config=/etc/jaeger/jaeger-config.yaml" ]
    volumes:
      - ./jaeger/jaeger-config.yaml:/etc/jaeger/jaeger-config.yaml:ro
      - ./jaeger/ui-config.json:/etc/jaeger/ui-config.json:ro
    ports:
      - "16686:16686"     # Query UI/API
      - "14250:14250"     # OTLP/gRPC receiver
      - "14268:14268"     # Jaeger Thrift-HTTP /api/traces
      - "9411:9411"       # Zipkin receiver
      - "6831:6831/udp"   # Thrift compact
      - "6832:6832/udp"   # Thrift binary
      - "13133:13133"     # Healthcheck v2
    networks:
      - observability

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9080:9080"
    depends_on:
      - loki
    networks:
      - observability


  dcgm_exporter:
    image: nvidia/dcgm-exporter:latest
    container_name: dcgm_exporter
    runtime: nvidia
    privileged: true
    cap_add:
      - SYS_ADMIN
    volumes:
      - /run/nvidia:/run/nvidia:ro
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [ gpu ]
    ports:
      - "9400:9400"
    networks:
      - observability


volumes:
  grafana_data:
  loki_data:
  prometheus_data:
networks:
  observability:
    driver: bridge
