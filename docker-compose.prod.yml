services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3099:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
    networks:
      - observability

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - observability

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.prod.yml:/etc/loki/local-config.yml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yml
    user: "0"
    networks:
      - observability

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel/otel-collector-config.yaml"]
    volumes:
     - ./otel/otel-collector-config.yaml:/etc/otel/otel-collector-config.yaml
    ports:
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP Http
      - "8889:8889"    # Prometheus metrics endpoint
    networks:
      - observability

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9101:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.netdev'
    networks:
      - observability

  jaeger:
    image: jaegertracing/jaeger:latest
    container_name: jaeger
    command: [ "--config=/etc/jaeger/jaeger-config.yaml" ]
    volumes:
      - ./jaeger/jaeger-config.yaml:/etc/jaeger/jaeger-config.yaml:ro
      - ./jaeger/ui-config.json:/etc/jaeger/ui-config.json:ro
    ports:
      - "16686:16686"     # Query UI/API
      - "14250:14250"     # OTLP/gRPC receiver
      - "14268:14268"     # Jaeger Thrift-HTTP /api/traces
      - "9411:9411"       # Zipkin receiver
      - "6831:6831/udp"   # Thrift compact
      - "6832:6832/udp"   # Thrift binary
      - "13133:13133"     # Healthcheck v2
    networks:
      - observability

volumes:
  grafana_data:
  loki_data:
  prometheus_data:
networks:
  observability:
    driver: bridge